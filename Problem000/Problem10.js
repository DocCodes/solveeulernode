const Problem = require('../Problem.js')

/**
* Solved 2018-10-17
* @type {Problem}
*/
const Problem10 = new Problem(
  'Problem 10',
  10,
  `The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.`,
  `Find the sum of all the primes below two million.`,
  () => {
    let sum = 0
    let pr = true
    for (let i = 2; i < 2000000; i++) {
      pr = true
      for (let j = 2; j <= Math.ceil(Math.sqrt(i)); j++) {
        if (i % j === 0) {
          pr = false
          break
        }
      }
      if (pr) { sum += i }
    }
    return sum
  }
)

/**
* Unsolved
* @type {Problem}
*/
const Problem11 = new Problem(
  'In the 20×20 grid below, four numbers along a diagonal line have been marked in red.',
  11,
  `In the 20×20 grid below, four numbers along a diagonal line have been marked in red. The product of these numbers is 26 × 63 × 78 × 14 = 1788696.`,
  `What is the greatest product of four adjacent numbers in the same direction (up, down, left, right, or diagonally) in the 20×20 grid?`,
  () => {},
  false
)
/**
* Unsolved
* @type {Problem}
*/
const Problem12 = new Problem(
  'Highly divisible triangular number',
  12,
  `The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.`,
  `What is the value of the first triangle number to have over five hundred divisors?`,
  () => {
    let i = 1
    while (true) {
      let sum = i * (++i) / 2
      let divCnt = 0

      for (var j = 0; j <= Math.ceil(Math.sqrt(sum)); j++) {
        if (sum % j === 0) { divCnt += 2 }
        if (j ** 2 === i) { divCnt-- }
        if (divCnt > 500) { return sum }
      }
    }
  }
)
/**
* Unsolved
* @type {Problem}
*/
const Problem13 = new Problem(
  'Title',
  13,
  `Description`,
  `Prompt`,
  () => {},
  false
)
/**
* Unsolved
* @type {Problem}
*/
const Problem14 = new Problem(
  'Title',
  14,
  `Description`,
  `Prompt`,
  () => {},
  false
)
/**
* Unsolved
* @type {Problem}
*/
const Problem15 = new Problem(
  'Title',
  15,
  `Description`,
  `Prompt`,
  () => {},
  false
)
/**
* Unsolved
* @type {Problem}
*/
const Problem16 = new Problem(
  'Title',
  16,
  `Description`,
  `Prompt`,
  () => {},
  false
)
/**
* Unsolved
* @type {Problem}
*/
const Problem17 = new Problem(
  'Title',
  17,
  `Description`,
  `Prompt`,
  () => {},
  false
)
const Problem18 = new Problem(
  'Title',
  18,
  `Description`,
  `Prompt`,
  () => {},
  false
)
/**
* Unsolved
* @type {Problem}
*/
const Problem19 = new Problem(
  'Title',
  19,
  `Description`,
  `Prompt`,
  () => {},
  false
)

module.exports = [
  Problem10,
  Problem11,
  Problem12,
  Problem13,
  Problem14,
  Problem15,
  Problem16,
  Problem17,
  Problem18,
  Problem19
]
